-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.user_email_stat
(
    user_id uuid NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    stat_id text COLLATE pg_catalog."default" NOT NULL,
    stat_value integer NOT NULL DEFAULT 0,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT user_email_stat_pkey PRIMARY KEY (user_id, email, stat_id),
    CONSTRAINT user_email_stat_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_email_stat
    OWNER to postgres;

ALTER TABLE IF EXISTS public.user_email_stat
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.user_email_stat TO anon;

GRANT ALL ON TABLE public.user_email_stat TO authenticated;

GRANT ALL ON TABLE public.user_email_stat TO postgres;

GRANT ALL ON TABLE public.user_email_stat TO service_role;
CREATE POLICY "Users can view their own email stats"
    ON public.user_email_stat
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING ((auth.uid() = user_id));

CREATE TRIGGER handle_updated_at_user_email_stat
    BEFORE UPDATE 
    ON public.user_email_stat
    FOR EACH ROW
    EXECUTE FUNCTION extensions.moddatetime('updated_at');

ALTER PUBLICATION SUPABASE_REALTIME ADD TABLE USER_EMAIL_STAT;
ALTER PUBLICATION SUPABASE_REALTIME ADD TABLE USER_EMAIL_SYNC_HISTORY;
